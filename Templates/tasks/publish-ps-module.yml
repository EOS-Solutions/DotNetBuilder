parameters:
- name: feedUri # the URL of the powershellget feed
  type: string
- name: moduleFolder # the root folder containing PS modules to be published
  type: string
- name: apiKey # the API key to use for publishing
  type: string
- name: username # if specified, use this credential for the feed (optional)
  type: string
  default: ''
- name: password # if specified, use this credential for the feed (optional)
  type: string
  default: ''
- name: clearText # if specified, the password is stored in clear-text in the nuget configuration
  type: boolean
  default: false

steps:
- task: PowerShell@2
  inputs:
    pwsh: true
    targetType: inline
    script: |
      iex ". { $(irm https://raw.githubusercontent.com/EOS-Solutions/PSCiCdHelper/main/install.ps1 -Headers @{"Cache-Control" = "no-cache"}) }"
      $ArgObject = @{
        ModuleFolder = "${{ parameters.moduleFolder }}"
        FeedUri = "${{ parameters.feedUri }}"
        ApiKey = "${{ parameters.apiKey }}"
      }
      $Username = "${{ parameters.username }}"
      if ($Username) {
        $UseClearText = "${{ parameters.clearText }}" -ieq "true"
        $SecurePassword = ConvertTo-SecureString -Force -AsPlainText "${{ parameters.password }}"
        $Credentials = New-Object pscredential -ArgumentList ($Username, $SecurePassword)
        $ArgObject += @{ Credentials = $Credentials }
        $TempFeed = PsCiCdHelper\Initialize-NuGetFeed -PackageFeedUrl "${{ parameters.feedUri }}" -PackageFeedCredentials $Credentials -StorePasswordsInClearText:$UseClearText
      }
      PsCiCdHelper\Publish-PsModule @ArgObject
      if ($TempFeed) {
        dotnet nuget remove source $TempFeed
      }